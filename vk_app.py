import streamlit as st
import openpyxl
import pandas as pd
import numpy as np
import plotly.express as px
import re
import requests
import time
from collections import Counter

VK_THEME2SEGMENT = {
    "dj": "Музыка",
    "r&b": "Музыка",
    "rap, hip-hop": "Музыка",
    "авиакомпания": "Бизнес и финансы",
    "автовладельцы": "Авто и мото",
    "автомобили": "Авто, мото",
    "автомойка": "Авто и мото",
    "автопроизводитель": "Авто и мото",
    "автосалон": "Торговля и магазины",
    "автосервис": "Авто и мото",
    "автоспорт": "Спорт",
    "автотовары": "Авто и мото",
    "автошкола": "Авто и мото",
    "азартные игры": "Азартные игры",
    "активный отдых": "Путешествия и отдых",
    "актриса": "Кино",
    "актёр": "Кино",
    "актёр или актриса": "Кино",
    "альбом": "Музыка",
    "анимация": "Кино",
    "антиквариат": "Антиквариат",
    "аптека, оптика": "Медицина и здоровье",
    "аренда автомобилей": "Авто и мото",
    "астрология, эзотерика": "Астрология и эзотерика",
    "база отдыха": "Путешествия и отдых",
    "банк, финансовое учреждение": "Бизнес и финансы",
    "бар, паб": "Еда и напитки",
    "баскетбол": "Спорт",
    "баскетбольная команда": "Спорт",
    "бассейн": "Спорт",
    "безопасность": "Разное",
    "беременность, роды": "Семья, дети",
    "биатлонистка": "Спорт",
    "библиотека": "Книги",
    "бизнес": "Бизнес и предпринимательство",
    "благотворительная организация": "Благотворительность",
    "благотворительность": "Благотворительность",
    "блог": "Развлечения и медиа",
    "блогер": "Развлечения и медиа",
    "блюз": "Музыка",
    "боевые искусства": "Спорт",
    "больница": "Медицина и здоровье",
    "бутик": "Торговля и магазины",
    "бытовая техника": "IT и технологии",
    "веб-студия": "IT и технологии",
    "ведущая": "Развлечения и медиа",
    "ведущий": "Развлечения и медиа",
    "велосипеды": "Спорт",
    "ветеринарная клиника": "Медицина и здоровье",
    "видеоигра": "Видеоигры",
    "видеоигры": "Видеоигры",
    "вконтакте": "Соцсети",
    "водный спорт": "Спорт",
    "водный транспорт": "Спорт",
    "военное дело": "Милитаризм",
    "врач": "Медицина и здоровье",
    "вымышленный персонаж": "Развлечения и медиа",
    "высокие технологии": "IT и технологии",
    "галерея": "Культура, искусство",
    "гимназия": "Образование",
    "гипермаркет": "Торговля и магазины",
    "городское сообщество": "Общество",
    "гостиница": "Путешествия и отдых",
    "государственная организация": "Общество",
    "грузоперевозки": "Авто и мото",
    "группа выпускников": "Образование",
    "группа коллег": "Общение и знакомства",
    "группа памяти": "Общение и знакомства",
    "группа сокурсников": "Образование",
    "детская одежда и обувь": "Торговля и магазины",
    "детский сад": "Семья, дети",
    "детское питание": "Семья, дети",
    "джаз": "Музыка",
    "диеты, здоровое питание": "Медицина и здоровье",
    "дизайн и графика": "Дизайн",
    "дизайн интерьера": "Дизайн",
    "дизайн-студия": "Дизайн",
    "дизайнер": "Дизайн",
    "дискуссионный клуб": "Общество",
    "дом культуры": "Культура, искусство",
    "домашние и дикие животные": "Животные",
    "дополнительное образование": "Образование",
    "доставка еды": "Еда и напитки",
    "другая музыка": "Музыка",
    "другие виды спорта": "Спорт",
    "другие товары": "Торговля и магазины",
    "другие услуги": "Услуги",
    "другие хобби": "Хобби и развлечения",
    "друзья": "Разное",
    "духовное лицо": "Религия и духовность",
    "еда и напитки": "Еда и напитки",
    "журналист": "Журналистика",
    "журналист или журналистка": "Журналистика",
    "журналистка": "Журналистика",
    "закрытое сообщество": "Общество",
    "звукозапись": "Музыка",
    "здоровый образ жизни": "Красота, здоровье",
    "зимние виды спорта": "Спорт",
    "знакомства": "Общение и знакомства",
    "зоомагазин": "Животные",
    "зоопарк": "Животные",
    "игра": "Видеоигры",
    "игровая студия": "Видеоигры",
    "игры": "Видеоигры",
    "игры, игрушки": "Семья, дети",
    "издательский дом": "Журналистика",
    "инвестиции": "Бизнес и финансы",
    "инди": "Музыка",
    "институт": "Образование",
    "интеллектуальные игры": "Хобби и развлечения",
    "интернет": "IT и технологии",
    "интернет-магазин": "Торговля и магазины",
    "интернет-провайдер": "IT и технологии",
    "интернет-сми": "СМИ",
    "интерьер": "Дом и ремонт",
    "информационный портал": "Разное",
    "искусство и развлечения": "Хобби и развлечения",
    "история": "Культура, искусство",
    "кафе": "Еда и напитки",
    "кафе, ресторан": "Еда и напитки",
    "квест": "Хобби и развлечения",
    "киберспорт": "Спорт",
    "киберспортивная команда": "Спорт",
    "киберспортивная организация": "Спорт",
    "кинематограф": "Кино",
    "кино": "Кино",
    "кинотеатр": "Кино",
    "классическая музыка": "Музыка",
    "клиника": "Медицина и здоровье",
    "клуб": "Общение и знакомства",
    "книга": "Книги",
    "книжный магазин": "Книги",
    "колледж": "Образование",
    "комик": "Юмор",
    "компания": "Бизнес и предпринимательство",
    "композитор": "Музыка",
    "компьютерная техника": "IT и технологии",
    "компьютерные услуги": "IT и технологии",
    "консалтинг, бизнес-услуги": "Бизнес и финансы",
    "концерт": "Музыка",
    "концертный зал": "Музыка",
    "косметология": "Красота, здоровье",
    "кофейня": "Еда и напитки",
    "критик": "Журналистика",
    "кулинария": "Еда и напитки",
    "кулинария, рецепты": "Еда и напитки",
    "культура": "Культура, искусство",
    "культура и искусство": "Культура, искусство",
    "культурный центр": "Культура, искусство",
    "курсы": "Образование",
    "латиноамериканская музыка": "Музыка",
    "летние виды спорта": "Спорт",
    "летний лагерь": "Семья, дети",
    "литература": "Культура, искусство",
    "лёгкая атлетика": "Спорт",
    "магазин": "Торговля и магазины",
    "мебель": "Дом и ремонт",
    "медицина": "Медицина и здоровье",
    "медицинская услуга": "Медицина и здоровье",
    "медицинский центр": "Медицина и здоровье",
    "место отдыха": "Путешествия и отдых",
    "метал": "музыка",
    "мобильные технологии": "IT и технологии",
    "модель": "Мода и стиль",
    "модельное агентство": "Мода и стиль",
    "молодёжное движение": "Общество",
    "мототехника": "Авто и мото",
    "мотоциклы и другая мототехника": "Авто и мото",
    "музей, галерея, выставка": "Культура, искусство",
    "музыка": "Музыка",
    "музыкальная группа": "Музыка",
    "музыкальные инструменты": "Музыка",
    "музыкальный лейбл": "Музыка",
    "музыкант": "Музыка",
    "мультфильм": "Кино",
    "народная музыка, фолк": "Музыка",
    "настольные игры": "Хобби и развлечения",
    "наука": "Наука и космос",
    "недвижимость": "Недвижимость",
    "некоммерческая организация": "Общество",
    "нотариальная контора": "Услуги",
    "ночной клуб": "Хобби и развлечения",
    "обмен музыкой": "Музыка",
    "оборудование": "Разное",
    "образование": "Образование",
    "образовательное учреждение": "Образование",
    "обучающие курсы": "Образование",
    "общественная организация": "Общество",
    "общественное движение": "Общество",
    "общественный деятель": "Общество",
    "общество": "Общество",
    "объявления": "Разное",
    "одежда, обувь": "Мода и стиль",
    "онлайн-игра": "Видеоигры",
    "оператор мобильной связи": "IT и технологии",
    "организация": "Общество",
    "организация праздников": "Праздники и события",
    "отдых на природе": "Путешествия и отдых",
    "отношения полов": "Знакомства",
    "охота и рыбалка": "Путешествия и отдых",
    "парк отдыха": "Путешествия и отдых",
    "парк развлечений": "Хобби и развлечения",
    "парфюмерия, косметика": "Красота, здоровье",
    "пассажирские перевозки": "Услуги",
    "певец": "Музыка",
    "певец или певица": "Музыка",
    "певица": "Музыка",
    "персонаж": "Развлечения и медиа",
    "печатное издание": "СМИ и журналистика",
    "печать, полиграфия": "Услуги",
    "писатель": "Культура и искусство",
    "писатель или писательница": "Культура и искусство",
    "писательница": "Культура и искусство",
    "платёжная система": "Разное",
    "подготовка к свадьбе": "Праздники и события",
    "поиск работы": "Финансы и страхование",
    "покупки": "Торговля и магазины",
    "политик": "Политика и государство",
    "политик, госслужащий": "Политика и государство",
    "политика": "Политика и государство",
    "политическая партия": "Политика и государство",
    "почтовая служба": "Услуги",
    "пошив и ремонт одежды": "Услуги",
    "поэт": "Культура и искусство",
    "поэт или поэтесса": "Культура и искусство",
    "поэтесса": "Культура и искусство",
    "предприниматель": "Бизнес и финансы",
    "предприниматель или предпринимательница": "Бизнес и финансы",
    "предпринимательница": "Бизнес и финансы",
    "приложение": "IT и технологии",
    "программирование": "IT и технологии",
    "программное обеспечение": "IT и технологии",
    "продажа билетов, бронирование гостиниц": "Путешествия и отдых",
    "продукты питания, напитки": "Еда и напитки",
    "производство контента": "Услуги",
    "производство, промышленность": "Разное",
    "прокат": "Музыка",
    "профессиональное училище": "Образование",
    "профессиональные услуги": "Услуги",
    "психолог": "Психология и саморазвитие",
    "психология": "Психология и саморазвитие",
    "публицист": "Культура и искусство",
    "публичная страница": "СМИ",
    "радиостанция": "Музыка",
    "развлечения": "Хобби и развлечения",
    "режиссёр": "Кино",
    "режиссёр, продюсер": "Кино",
    "реклама": "Услуги",
    "религиозное учреждение": "Религия и духовность",
    "религия": "Религия и духовность",
    "ремонтная мастерская": "Дом и ремонт",
    "ресторан": "Еда и напитки",
    "родители и дети": "Семья, дети",
    "родственники": "Общество",
    "рок": "Музыка",
    "ролевые игры": "Хобби и развлечения",
    "ролики": "Хобби и развлечения",
    "рыбалка": "Путешествия и отдых",
    "садоводство": "Дом и ремонт",
    "сайт": "IT и технологии",
    "сайты": "IT и технологии",
    "салон красоты": "Красота, здоровье",
    "салоны сотовой связи": "Торговля и магазины",
    "санаторий, дом отдыха": "Путешествия и отдых",
    "свадебный салон": "Праздники и события",
    "сериал": "Кино",
    "сми": "СМИ и коммуникации",
    "соседи": "общество",
    "спа-салон": "Красота, здоровье",
    "спектакль": "Культура и искусство",
    "спорт и красота": "Спорт",
    "спортивная команда": "Спорт",
    "спортивная одежда и обувь": "Спорт",
    "спортивная организация": "Спорт",
    "спортивное питание": "Спорт",
    "спортивные товары": "Спорт",
    "спортивный клуб": "Спорт",
    "спортивный комплекс": "Спорт",
    "спортсмен": "Спорт",
    "спортсмен / спортсменка": "Спорт",
    "спортсменка": "Спорт",
    "стилист, имиджмейкер": "Мода и стиль",
    "стиль, мода": "Мода и стиль",
    "стиль, одежда, обувь": "Мода и стиль",
    "стоматология": "Медицина и здоровье",
    "страна": "Разное",
    "стример": "Разное",
    "строительные и ремонтные работы": "Дом и ремонт",
    "строительные материалы, инструменты": "Дом и ремонт",
    "строительство, ремонт": "Дом и ремонт",
    "студия": "Услуги",
    "студия звукозаписи": "Музыка",
    "супермаркет": "Торговля и магазины",
    "такси": "Авто и мото",
    "танцевальная музыка": "Музыка",
    "танцевальная школа": "Музыка",
    "танцор": "Музыка",
    "танцы": "Музыка",
    "тату-салон": "Услуги",
    "творческое объединение": "Общество",
    "творчество": "Культура, искусство",
    "театр": "Культура, искусство",
    "тексты, аккорды": "Разное",
    "телеканал": "СМИ",
    "теннис": "Спорт",
    "техника, электроника": "IT и технологии",
    "товар": "Торговля и магазины",
    "товары для дачи, огорода": "Дом и ремонт",
    "товары для детей": "Семья и дети",
    "товары для дома": "Дом и ремонт",
    "товары для животных": "Животные",
    "товары для офиса": "Торговля и магазины",
    "товары для праздников": "Праздники и события",
    "товары для творчества": "Торговля и магазины",
    "торгово-развлекательный центр": "Торговля и магазины",
    "торговый центр": "Торговля и магазины",
    "транспорт": "Авто, мото",
    "транспортные услуги": "Услуги",
    "тренинг, семинар": "Образование",
    "турагентство": "Путешествия и отдых",
    "туризм": "Путешествия и отдых",
    "туризм и отдых": "Путешествия и отдых",
    "туризм, путешествия": "Туризм и отдых",
    "туристическое агентство": "Разное",
    "туры, экскурсии": "Путешествия и отдых",
    "украшения, бижутерия": "Торговля и магазины",
    "университет": "Образование",
    "университетский спорт": "Образование",
    "управляющая компания": "Бизнес и финансы",
    "услуга": "Услуги",
    "услуги для автовладельцев": "Авто и мото",
    "услуги для владельцев животных": "Животные",
    "уход за собой": "Красота, здоровье",
    "учёный, преподаватель": "Образование",
    "фан-сообщество": "Общество",
    "фестиваль": "Праздники и события",
    "философия": "Разное",
    "фильм": "Кино",
    "финансовые рынки": "Бизнес и финансы",
    "финансы": "Финансы и страхование",
    "фитнес": "Красота, здоровье",
    "фитнес-центр": "Спорт",
    "фото- и видеосъемка": "Фотография и видео",
    "фото- и видеосъёмка": "Фотография и видео",
    "фотограф": "Фотография и видео",
    "фотография": "Фотография и видео",
    "футбол": "Спорт",
    "футболист": "Спорт",
    "футбольная команда": "Спорт",
    "химчистка, прачечная": "Дом и ремонт",
    "хоккей": "Спорт",
    "хоккейная команда": "Спорт",
    "хостел": "Путешествия и отдых",
    "хостинг, регистрация доменов": "IT и технологии",
    "храм": "Религия и духовность",
    "художник": "Культура и искусство",
    "художник или художница": "Культура и искусство",
    "художница": "Культура и искусство",
    "цветы": "Торговля и магазины",
    "цирк": "Хобби и развлечения",
    "часы": "Мода и стиль",
    "школа": "Образование",
    "шоу": "Развлечения и медиа",
    "шоу, передача": "Развлечения и медиа",
    "шоу-бизнес": "Бизнес и финансы",
    "экономика и финансы": "Бизнес и финансы",
    "экстремальный спорт": "Спорт",
    "электроника": "IT и технологии",
    "электронная музыка": "Музыка",
    "эротика": "Разное",
    "ювелирные изделия": "Торговля и магазины",
    "юмор": "Развлечения и медиа",
    "юридические услуги": "Услуги",
    "языки": "Разное",
    }

# --- Конфигурация страницы и заголовок
st.set_page_config(page_title="VK Анализ", layout="wide")
st.title("VK Анализ: Сбор и анализ профилей ВКонтакте")

# --- определение сегмента ---
def define_segment(groups):
    if not groups:
        return np.nan
    mapped = [
        VK_THEME2SEGMENT.get(str(g.get("theme", "")).lower().strip())
        for g in groups if g.get("theme")
    ]
    mapped = [m for m in mapped if m]
    return Counter(mapped).most_common(1)[0][0] if mapped else np.nan

# --- Загрузка ID-файла ---
uploaded = st.sidebar.file_uploader("Загрузите CSV с user_id", type=["csv"])

st.sidebar.markdown("""
### ℹ️ О приложении
- Загружаем ID пользователей
- Введите VK API токен
- Сбор данных через API: `users.get`, `groups.get`
- Анализируем ботов и интересы
""")

if uploaded:
    df = pd.read_csv(uploaded)
    id_col = "VK ID"
    ids = df[id_col].astype(int).tolist()

    vk_token = st.sidebar.text_input("Введите VK API токен", type="password")
    if vk_token and st.sidebar.button("Собрать данные из VK API"):
        import requests, time

        BASE_URL = 'https://api.vk.com/method/'
        API_VERSION = '5.199'
        results = []
        users_chunks = [ids[i:i+100] for i in range(0, len(ids), 100)]

        progress_bar = st.progress(0, text="⏳ Сбор данных из VK API...")
        
        for idx, chunk in enumerate(users_chunks):
            st.write(f"🔄 Обрабатываем пользователей {idx*100+1}-{idx*100+len(chunk)}")
            users_resp = requests.get(BASE_URL + 'users.get', params={
                'user_ids': ','.join(map(str, chunk)),
                'fields': 'activities,bdate,city,country,education,last_seen,occupation,sex,universities',
                'access_token': vk_token,
                'v': API_VERSION
            }).json()
        
            for user in users_resp.get("response", []):
                try:
                    user_result = {
                        "first_name": user.get("first_name"),
                        "last_name": user.get("last_name"),
                        "activities": user.get("activities"),
                        "bdate": user.get("bdate"),
                        "city": user.get("city", {}).get("title") if isinstance(user.get("city"), dict) else None,
                        "country": user.get("country", {}).get("title") if isinstance(user.get("country"), dict) else None,
                        "university_name": user.get("education", {}).get("university_name") if isinstance(user.get("education"), dict) else None,
                        "faculty_name": user.get("education", {}).get("faculty_name") if isinstance(user.get("education"), dict) else None,
                        "last_seen_time": user.get("last_seen", {}).get("time") if isinstance(user.get("last_seen"), dict) else None,
                        "occupation_type": user.get("occupation", {}).get("type") if isinstance(user.get("occupation"), dict) else None,
                        "sex": user.get("sex"),
                        "faculty_from_universities": (
                            user["universities"][0].get("faculty_name")
                            if isinstance(user.get("universities"), list) and len(user["universities"]) > 0
                            else None
                        ),
                        "VK ID": user.get("id"),
                    }
        
                    # groups.get запрос
                    resp = requests.get(BASE_URL + 'groups.get', params={
                        'user_id': user.get("id"),
                        'access_token': vk_token,
                        'v': API_VERSION,
                        'extended': 1,
                        'fields': 'activity',
                        'count': 1000
                    })
                    groups_data = resp.json()
        
                    if "response" in groups_data:
                        groups = groups_data["response"]["items"]
                        user_result["group_count"] = len(groups)
                        for j, group in enumerate(groups[:50], start=1):
                            user_result[f"group_{j}_name"] = group.get("name", "")
                            user_result[f"group_{j}_activity"] = group.get("activity", "")
                        results.append(user_result)
        
                except Exception:
                    pass
        
            progress_bar.progress((idx + 1) / len(users_chunks), text=f"⏳ Обработано {idx + 1} из {len(users_chunks)} пакетов")
            time.sleep(0.5)
        
        progress_bar.empty()

        df_vk = pd.DataFrame(results)
        df = df.merge(df_vk, on=id_col, how="left")
        st.session_state["df"] = df
        st.success("✅ Данные собраны и объединены!")

if "df" in st.session_state:
    df = st.session_state["df"]

    # --- метка "бот" ---
    df["ВИЗИТ В ВК"] = pd.to_datetime(df["last_seen_time"], unit="s", errors='coerce')
    first_q = df["group_count"].quantile(0.25)
    bot_thr = df["group_count"].mean() + 2 * df["group_count"].std()
    max_date = df["ВИЗИТ В ВК"].max()
    days_since = (max_date - df["ВИЗИТ В ВК"]).dt.days
    df["Тип аккаунта"] = "пользователь"
    df.loc[(df["group_count"]<=first_q) | ((df["group_count"]>bot_thr)&(days_since>180)) | (days_since>360), "Тип аккаунта"] = "бот"

    # --- сегменты ---
    theme_cols = [c for c in df.columns if re.match(r"group_\d+_activity$", c)]
    df['segment'] = df.apply(
        lambda row: define_segment([
            {"theme": str(row[c]).lower().strip()} for c in theme_cols if pd.notna(row[c]) and str(row[c]).strip()
        ]), axis=1
    )

    # --- фильтры ---
    account_filter = st.radio("Кого показывать:", ["Всех", "Только пользователей", "Только ботов"])
    df_plot = df.copy()
    if account_filter == "Только пользователей":
        df_plot = df_plot[df_plot["Тип аккаунта"] == "пользователь"]
    elif account_filter == "Только ботов":
        df_plot = df_plot[df_plot["Тип аккаунта"] == "бот"]

    segment_options = ["Все"] + sorted(df_plot['segment'].dropna().unique())
    selected_segment = st.selectbox("Фильтр по сегменту:", segment_options)
    if selected_segment != "Все":
        df_plot = df_plot[df_plot["segment"] == selected_segment]

    # --- вывод ---
    st.subheader("Результаты")
    col1, col2, col3 = st.columns(3)
    col1.metric("Всего аккаунтов", len(df))
    col2.metric("Боты", (df["Тип аккаунта"] == "бот").sum())
    col3.metric("Пользователи", (df["Тип аккаунта"] == "пользователь").sum())
    st.dataframe(df_plot, use_container_width=True, height=600)

    st.subheader("Распределение сегментов")
    show_users_only = st.checkbox("Только пользователи в графике", value=True)
    df_graph = df_plot[df_plot["Тип аккаунта"] == "пользователь"] if show_users_only else df_plot

    segment_counts = df_graph['segment'].fillna("Нет сегмента").value_counts().sort_values(ascending=False)
    top_n = st.slider("Сколько сегментов показать на графике:", 5, 30, 10)
    df_bar = segment_counts.head(top_n).reset_index()
    df_bar.columns = ["Сегмент", "Количество"]
    fig = px.bar(df_bar, x="Сегмент", y="Количество", title=f"Топ-{top_n} сегментов", height=500)
    st.plotly_chart(fig, use_container_width=True)

    with st.expander("📦 Детали по ботам"):
        bots = df[df["Тип аккаунта"] == "бот"]
        st.write("Среднее число групп у ботов:", round(bots['group_count'].mean(), 2))
        st.write("Ботов с визитом более 360 дней назад:", (days_since > 360).sum())
        bot_segments = bots['segment'].fillna("Нет сегмента").value_counts().sort_values(ascending=False)
        st.bar_chart(bot_segments)
        st.dataframe(bots)

    # --- кнопка скачивания ---
    from io import BytesIO
    if st.sidebar.button("Скачать результат"):
        buffer = BytesIO()
        df_plot.to_excel(buffer, index=False)
        st.download_button("📥 Скачать Excel", buffer.getvalue(), file_name="vk_analysis.xlsx")
else:
    st.info("Загрузите CSV с ID пользователей.")
